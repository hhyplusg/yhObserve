<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
 <classPathEntry location="F:\repository\mysql\mysql-connector-java\5.1.1\mysql-connector-java-5.1.1.jar" />
  <context id="context1" >
  
   <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin>
  <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>
  <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"></plugin>
  <!-- 自定义插件 -->
  <plugin type="com.wave.base.plugin.mybatis.generator.MySerializablePlugin"></plugin>
  <plugin type="com.wave.base.plugin.mybatis.generator.BaseExampleModelPlugin"></plugin>
        
	<commentGenerator>  
            <property name="suppressDate"  value="true"/>  
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->  
            <property name="uppressAllComments"  value="true"/>
        </commentGenerator>   
    <jdbcConnection driverClass="com.mysql.jdbc.Driver" 
    	connectionURL="jdbc:mysql://127.0.0.1:3306/waveplus" 
	    userId="root" 
	    password="123456" /> 
   <!-- 生成模型的包名和位置-->  
    <javaModelGenerator targetPackage="com.wave.base.vo.entity" targetProject="waveplus/src/main/java" >
		<property name="enableSubPackages"  value="true" />
		<property name="trimStrings" value="true" />
		 <property name="rootClass" value="com.wave.base.vo.BaseVo"/> 
    </javaModelGenerator> 
 	<!-- 生成映射文件的包名和位置-->
    <sqlMapGenerator targetPackage="com.wave.base.dao.mapper" targetProject="waveplus/src/main/java" >
    	 <property name="enableSubPackages"  value="true" />  
    </sqlMapGenerator>
      <!-- 生成DAO的包名和位置-->  
    <javaClientGenerator targetPackage="com.wave.base.dao.mapper" targetProject="waveplus/src/main/java" type="XMLMAPPER" >
    	<property name="enableSubPackages" value="true" />
    </javaClientGenerator>

	<!-- <table  tableName="yh_%" -->
    <table  tableName="syscorpinfor"
			
            enableCountByExample="true" 
            enableUpdateByExample="true"
			enableDeleteByExample="true" 
			enableSelectByExample="true"
			selectByExampleQueryId="true">
			<generatedKey column="id" sqlStatement="MySql" identity="true" />
    </table> 
  </context>
</generatorConfiguration>

<!-- generatedKey用于生成生成主键的方法，
            如果设置了该元素，MBG会在生成的<insert>元素中生成一条正确的<selectKey>元素，该元素可选
    column:主键的列名；
    sqlStatement：要生成的selectKey语句，有以下可选项：
        Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()
        DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()
        DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1
        Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()
        HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()
        Informix  :相当于selectKey的SQL为：select dbinfo('sqlca.sqlerrd1') from systables where tabid=1
        MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()
        SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()
        SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY
        JDBC      :相当于在生成的insert元素上添加useGeneratedKeys="true"和keyProperty属性
<generatedKey column="" sqlStatement=""/>
         --> 